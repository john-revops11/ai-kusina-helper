
import React, { useState } from 'react';
import { ChevronLeft, Database, Loader2 } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Link } from 'react-router-dom';
import { useToast } from '@/hooks/use-toast';
import { databasePopulationService } from '@/services/databasePopulationService';

const AdminPage = () => {
  const [isPopulating, setIsPopulating] = useState(false);
  const { toast } = useToast();

  const handlePopulateDatabase = async () => {
    if (isPopulating) return;
    
    const confirm = window.confirm(
      'This will populate your Firebase database with Philippine recipe data generated by AI. ' +
      'This process may take several minutes to complete and will use your Gemini API quota. Continue?'
    );
    
    if (!confirm) return;
    
    setIsPopulating(true);
    
    try {
      await databasePopulationService.populateAllRecipes();
    } catch (error) {
      console.error('Database population error:', error);
      toast({
        title: 'Error',
        description: 'Failed to populate database. See console for details.',
        variant: 'destructive'
      });
    } finally {
      setIsPopulating(false);
    }
  };
  
  const handlePopulateSingleRecipe = async () => {
    if (isPopulating) return;
    
    const recipeName = window.prompt('Enter the name of the Philippine recipe to populate:');
    if (!recipeName) return;
    
    setIsPopulating(true);
    
    try {
      await databasePopulationService.populateSingleRecipe(recipeName);
      toast({
        title: 'Success',
        description: `Recipe "${recipeName}" has been populated`,
      });
    } catch (error) {
      console.error('Recipe population error:', error);
      toast({
        title: 'Error',
        description: `Failed to populate recipe "${recipeName}"`,
        variant: 'destructive'
      });
    } finally {
      setIsPopulating(false);
    }
  };

  return (
    <div className="container mx-auto p-4 max-w-md">
      <Link to="/" className="flex items-center gap-1 mb-4 text-sm text-muted-foreground hover:text-foreground">
        <ChevronLeft size={16} />
        <span>Back to home</span>
      </Link>
      
      <Card>
        <CardHeader>
          <CardTitle>Database Administration</CardTitle>
          <CardDescription>
            Populate your Firebase database with Philippine recipe data.
          </CardDescription>
        </CardHeader>
        
        <CardContent className="space-y-4">
          <div className="bg-muted p-4 rounded-lg text-sm">
            <p>This utility uses Gemini AI to generate data for:</p>
            <ul className="list-disc pl-5 mt-2 space-y-1">
              <li>Recipe information</li>
              <li>Ingredients with quantities</li>
              <li>Step-by-step cooking instructions</li>
              <li>Ingredient substitutions</li>
            </ul>
          </div>
          
          <Button 
            className="w-full" 
            onClick={handlePopulateSingleRecipe} 
            disabled={isPopulating}
          >
            {isPopulating ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                Populating...
              </>
            ) : (
              <>Add Single Recipe</>
            )}
          </Button>
        </CardContent>
        
        <CardFooter>
          <Button 
            className="w-full" 
            variant="default" 
            onClick={handlePopulateDatabase} 
            disabled={isPopulating}
          >
            {isPopulating ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                Populating Database...
              </>
            ) : (
              <>
                <Database className="mr-2 h-4 w-4" />
                Populate Full Database
              </>
            )}
          </Button>
        </CardFooter>
      </Card>
    </div>
  );
};

export default AdminPage;
